prizes = [
    [3, -1, 4, 3, -2, -3, 4, 5],
    [-1, 2, -2, -1, 6, 2, -3, 3],
    [2, -1, 4, 3, -1, 2, -1, 3],
    [1, -2, 5, 6, 3, -4, -4, 6],
    [-2, 4, -2, 4, -5, 1, -3, -4],
    [-3, -2, -1, -5, 3, 1, -3, -3],
    [-2, -3, -2, 3, -2, 3, -2, -3],
    [2, -1, -2, -3, -2, -2, 4, 3]
]

#функція для знаходження максимального призу за допомогою динамічного програмування
def findmatrix(prizes):
    rows, cols = len(prizes), len(prizes[0])
    dp = [[0] * cols for _ in range(rows)]
    
    #ініціалізація початкової точки
    dp[0][0] = prizes[0][0]

    #заповнення першого рядка
    for j in range(1, cols):
        dp[0][j] = dp[0][j - 1] + prizes[0][j]

    #заповнення першого стовпця
    for i in range(1, rows):
        dp[i][0] = dp[i - 1][0] + prizes[i][0]

    #заповнення решти матриці
    for i in range(1, rows):
        for j in range(1, cols):
            dp[i][j] = max(dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1]) + prizes[i][j]

    return dp[rows - 1][cols - 1]

max_prize = findmatrix(prizes)
print(f"Максимальний приз, який може зібрати мандрівник: {max_prize}")
