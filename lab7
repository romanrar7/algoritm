import random
import time

def heapify(arr, n, i):
    largest = i
    left = 2 * i + 1
    right = 2 * i + 2

    if left < n and arr[i] < arr[left]:
        largest = left

    if right < n and arr[largest] < arr[right]:
        largest = right

    if largest != i:
        arr[i], arr[largest] = arr[largest], arr[i]
        heapify(arr, n, largest)

def heap_sort(arr):
    n = len(arr)

    for i in range(n // 2 - 1, -1, -1):
        heapify(arr, n, i)

    for i in range(n - 1, 0, -1):
        arr[i], arr[0] = arr[0], arr[i]
        heapify(arr, i, 0)

def generate_data(size, order='random'):
    if order == 'ascending':
        return list(range(size))
    elif order == 'descending':
        return list(range(size, 0, -1))
    else:
        return [random.randint(1, 100000) for _ in range(size)]

def measure_sort_time(size, order):
    data = generate_data(size, order)
    start_time = time.time()
    heap_sort(data)
    end_time = time.time()
    return end_time - start_time

def main():
    sizes = [10, 100, 1000, 5000, 10000]
    orders = ['випадковий', 'зростаючий', 'спадний']
    results = []

    for size in sizes:
        for order in orders:
            time_taken = measure_sort_time(size, order)
            results.append((size, order, time_taken))

    print('size\torder\ttime')
    for result in results:
        print(f'{result[0]}\t{result[1]}\t{result[2]:.5f}')

if __name__ == '__main__':
    main()
